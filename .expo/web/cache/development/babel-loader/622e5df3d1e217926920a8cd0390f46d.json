{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\exercise\\\\result-table\\\\ResultTableBase.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport YellowBox from \"react-native-web/dist/exports/YellowBox\";\nimport { Table, TableWrapper, Row, Rows, Col } from '@deb-95/react-native-table-component';\nexport default function ResultTableBase(_ref) {\n  var bgColor = _ref.bgColor,\n      color = _ref.color,\n      _ref$renderCell = _ref.renderCell,\n      renderCell = _ref$renderCell === void 0 ? null : _ref$renderCell;\n  var tableData = [[0, 0], [0, 0]];\n  var rows;\n\n  if (renderCell) {\n    rows = tableData.map(function (row) {\n      return row.map(function (val, index) {\n        return renderCell(val, index);\n      });\n    });\n  } else {\n    rows = tableData;\n  }\n\n  return React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {}, {\n      backgroundColor: bgColor\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.headerTitle), {}, {\n      color: color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Date\")), React.createElement(Table, {\n    style: styles.table,\n    borderStyle: {\n      borderWidth: 1,\n      borderColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(TableWrapper, {\n    style: styles.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, React.createElement(Col, {\n    data: ['Вес', 'Повторы'],\n    style: styles.tableRowTitle,\n    heightArr: [40, 40],\n    textStyle: styles.tableRowTitleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Rows, {\n    data: rows,\n    widthArr: [50, 50],\n    heightArr: [40, 40],\n    style: styles.tableRow,\n    textStyle: styles.tableRowText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 15,\n    paddingRight: 15,\n    height: 250\n  },\n  header: {\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  headerTitle: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  table: {},\n  tableWrapper: {\n    width: 210,\n    flexDirection: 'row'\n  },\n  tableRow: {},\n  tableRowTitle: {\n    width: 150\n  },\n  tableRowTitleText: {\n    fontSize: 18,\n    lineHeight: 40,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/exercise/result-table/ResultTableBase.js"],"names":["React","Table","TableWrapper","Row","Rows","Col","ResultTableBase","bgColor","color","renderCell","tableData","rows","map","row","val","index","styles","container","backgroundColor","header","headerTitle","table","borderWidth","borderColor","tableWrapper","tableRowTitle","tableRowTitleText","tableRow","tableRowText","StyleSheet","create","paddingTop","paddingBottom","paddingLeft","paddingRight","height","fontSize","textAlign","width","flexDirection","lineHeight","padding"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, YellowBox } from 'react-native';\r\nimport { Table, TableWrapper, Row, Rows, Col } from '@deb-95/react-native-table-component';\r\n\r\nexport default function ResultTableBase({\r\n  bgColor, \r\n  color, \r\n  renderCell = null\r\n}) {\r\n    const tableData = [\r\n      [0, 0],\r\n      [0, 0]\r\n    ]\r\n\r\n    let rows;\r\n\r\n    if (renderCell) {\r\n      rows = tableData.map(\r\n        row => row.map(\r\n          (val, index) => renderCell(val, index)\r\n        )\r\n      )\r\n    } else {\r\n      rows = tableData\r\n    }\r\n\r\n    return (\r\n      <View style={{\r\n        ...styles.container,\r\n        backgroundColor: bgColor\r\n      }}>\r\n        <View style={styles.header}>\r\n          <Text style={{\r\n            ...styles.headerTitle,\r\n            color\r\n          }}>Date</Text>\r\n        </View>\r\n\r\n        <Table  style={styles.table} borderStyle={{borderWidth: 1, borderColor: color}}>\r\n          <TableWrapper style={styles.tableWrapper}>\r\n            <Col data={['Вес', 'Повторы']} style={styles.tableRowTitle} heightArr={[40, 40]} textStyle={styles.tableRowTitleText}/>\r\n            <Rows data={rows} widthArr={[50, 50]} heightArr={[40, 40]} style={styles.tableRow} textStyle={styles.tableRowText} />\r\n          </TableWrapper>\r\n        </Table>\r\n      </View>\r\n    )\r\n  }\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: '#fff',\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      height: 250\r\n    },\r\n    header: {\r\n      paddingBottom: 10,\r\n      paddingTop: 10,\r\n    },\r\n    headerTitle: {\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n    },\r\n    table: {\r\n\r\n    },\r\n    tableWrapper: {\r\n      width: 210,\r\n      flexDirection: 'row'\r\n    },\r\n    tableRow: {\r\n\r\n    },\r\n    tableRowTitle: {\r\n      width: 150\r\n\r\n    },\r\n    tableRowTitleText: {\r\n      fontSize: 18,\r\n      lineHeight: 40,\r\n      padding: 5    \r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}