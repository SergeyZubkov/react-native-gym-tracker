{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\exercise\\\\result-table\\\\ResultTableForm.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ResultTableBase from \"./ResultTableBase\";\n\nfunction Cell(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? undefined : _ref$value,\n      index = _ref.index;\n\n  var _useState = useState(value),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleChange = function handleChange(e) {};\n\n  return React.createElement(View, {\n    style: styles.cell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(TextInput, {\n    style: styles.cellText,\n    name: index,\n    value: val,\n    keyboardType: \"numeric\",\n    onChangeText: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default function ResultTableForm() {\n  var _this = this;\n\n  return React.createElement(ResultTableBase, {\n    color: \"white\",\n    bgColor: \"#d32f2f\",\n    renderCell: function renderCell(value, index) {\n      return React.createElement(Cell, {\n        value: value,\n        key: index,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 43\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  cell: {},\n  cellText: {\n    lineHeight: 40,\n    fontSize: 18,\n    textAlign: 'center',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/exercise/result-table/ResultTableForm.js"],"names":["React","useState","ResultTableBase","Cell","value","undefined","index","val","setValue","handleChange","e","styles","cell","cellText","ResultTableForm","StyleSheet","create","lineHeight","fontSize","textAlign","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,eAAP;;AAEA,SAASC,IAAT,OAA0C;AAAA,wBAA3BC,KAA2B;AAAA,MAA3BA,KAA2B,2BAAnBC,SAAmB;AAAA,MAARC,KAAQ,QAARA,KAAQ;;AACtC,kBAAwBL,QAAQ,CAACG,KAAD,CAAhC;AAAA;AAAA,MAAOG,GAAP;AAAA,MAAYC,QAAZ;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,CAAC,EAAI,CAEzB,CAFD;;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACI,IAAA,KAAK,EAAED,MAAM,CAACE,QADlB;AAEI,IAAA,IAAI,EAAEP,KAFV;AAGI,IAAA,KAAK,EAAEC,GAHX;AAII,IAAA,YAAY,EAAC,SAJjB;AAKI,IAAA,YAAY,EAAEE,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD;;AAEH,eAAe,SAASK,eAAT,GAA2B;AAAA;;AACtC,SACI,oBAAC,eAAD;AACI,IAAA,KAAK,EAAC,OADV;AAEI,IAAA,OAAO,EAAC,SAFZ;AAGI,IAAA,UAAU,EAAE,oBAACV,KAAD,EAAQE,KAAR;AAAA,aAAkB,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,KAAb;AAAoB,QAAA,GAAG,EAAEE,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAlB;AAAA,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAOH;AAEC,IAAMK,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,IAAI,EAAE,EADyB;AAG/BC,EAAAA,QAAQ,EAAE;AACNI,IAAAA,UAAU,EAAE,EADN;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,SAAS,EAAE,QAHL;AAINC,IAAAA,KAAK,EAAE;AAJD;AAHqB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TextInput, View } from 'react-native';\r\nimport ResultTableBase from './ResultTableBase';\r\n\r\nfunction Cell({value = undefined, index}) {\r\n    const [val, setValue] = useState(value)\r\n\r\n    const handleChange = e => {\r\n      \r\n    }\r\n    return (\r\n      <View style={styles.cell}>\r\n        <TextInput\r\n            style={styles.cellText}\r\n            name={index}\r\n            value={val}\r\n            keyboardType=\"numeric\"\r\n            onChangeText={handleChange}\r\n        />\r\n      </View>\r\n    )\r\n  }\r\n\r\nexport default function ResultTableForm() {\r\n    return (\r\n        <ResultTableBase\r\n            color=\"white\"\r\n            bgColor=\"#d32f2f\"\r\n            renderCell={(value, index) => <Cell value={value} key={index} />}\r\n        />\r\n    )\r\n}\r\n\r\n  const styles = StyleSheet.create({\r\n    cell: {\r\n    },\r\n    cellText: {\r\n        lineHeight: 40,\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}