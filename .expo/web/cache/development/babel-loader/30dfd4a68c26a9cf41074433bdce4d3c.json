{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\exercise\\\\result-table\\\\ResultTableBase.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Table, TableWrapper, Row, Rows, Col } from '@deb-95/react-native-table-component';\nexport default function ResultTableBase(_ref) {\n  var data = _ref.data,\n      bgColor = _ref.bgColor,\n      color = _ref.color,\n      _ref$renderCell = _ref.renderCell,\n      renderCell = _ref$renderCell === void 0 ? null : _ref$renderCell,\n      _ref$renderHeader = _ref.renderHeader,\n      renderHeader = _ref$renderHeader === void 0 ? null : _ref$renderHeader;\n  var twoDimensionalArray = Object.values(data);\n  console.log(twoDimensionalArray);\n  var rows;\n\n  if (renderCell) {\n    var rowNames = ['weights', 'repetitions'];\n    rows = twoDimensionalArray.map(function (row, rowIndex) {\n      return row.map(function (val, cellIndex) {\n        return renderCell(val, cellIndex, rowNames[rowIndex]);\n      });\n    });\n  } else {\n    rows = twoDimensionalArray;\n  }\n\n  var header = renderHeader ? renderHeader(styles) : React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.headerTitle), {}, {\n      color: color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Date\"));\n  return React.createElement(View, {\n    style: [styles.container, {\n      backgroundColor: bgColor\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, header, React.createElement(Table, {\n    style: styles.table,\n    borderStyle: {\n      borderWidth: 1,\n      borderColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(TableWrapper, {\n    style: styles.tableWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(Col, {\n    data: ['Вес', 'Повторы'],\n    style: styles.tableRowTitle,\n    heightArr: [40, 40],\n    textStyle: [styles.tableRowTitleText, {\n      color: color\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(Rows, {\n    data: rows,\n    widthArr: rows[0].map(function (_) {\n      return 50;\n    }),\n    heightArr: [40, 40],\n    style: styles.tableRow,\n    textStyle: styles.tableRowText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 15,\n    paddingRight: 15,\n    alignItems: 'flex-start'\n  },\n  header: {\n    paddingBottom: 10,\n    paddingTop: 10\n  },\n  headerTitle: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  table: {\n    minWidth: 210\n  },\n  tableWrapper: {\n    flexDirection: 'row'\n  },\n  tableRow: {},\n  tableRowTitle: {\n    width: 150\n  },\n  tableRowTitleText: {\n    fontSize: 18,\n    lineHeight: 40,\n    padding: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/exercise/result-table/ResultTableBase.js"],"names":["React","Table","TableWrapper","Row","Rows","Col","ResultTableBase","data","bgColor","color","renderCell","renderHeader","twoDimensionalArray","Object","values","console","log","rows","rowNames","map","row","rowIndex","val","cellIndex","header","styles","headerTitle","container","backgroundColor","table","borderWidth","borderColor","tableWrapper","tableRowTitle","tableRowTitleText","_","tableRow","tableRowText","StyleSheet","create","paddingTop","paddingBottom","paddingLeft","paddingRight","alignItems","fontSize","textAlign","minWidth","flexDirection","width","lineHeight","padding"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyCC,GAAzC,QAAoD,sCAApD;AAEA,eAAe,SAASC,eAAT,OAMZ;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,OAIC,QAJDA,OAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,6BAFDC,UAEC;AAAA,MAFDA,UAEC,gCAFY,IAEZ;AAAA,+BADDC,YACC;AAAA,MADDA,YACC,kCADc,IACd;AAGC,MAAMC,mBAAmB,GAAGC,MAAM,CAACC,MAAP,CAAcP,IAAd,CAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYJ,mBAAZ;AAEA,MAAIK,IAAJ;;AAEA,MAAIP,UAAJ,EAAgB;AACd,QAAMQ,QAAQ,GAAG,CACf,SADe,EAEf,aAFe,CAAjB;AAIAD,IAAAA,IAAI,GAAGL,mBAAmB,CAACO,GAApB,CACL,UAACC,GAAD,EAAMC,QAAN;AAAA,aAAmBD,GAAG,CAACD,GAAJ,CACjB,UAACG,GAAD,EAAMC,SAAN;AAAA,eAAoBb,UAAU,CAACY,GAAD,EAAMC,SAAN,EAAiBL,QAAQ,CAACG,QAAD,CAAzB,CAA9B;AAAA,OADiB,CAAnB;AAAA,KADK,CAAP;AAKD,GAVD,MAUO;AACLJ,IAAAA,IAAI,GAAGL,mBAAP;AACD;;AAED,MAAMY,MAAM,GAAGb,YAAY,GACvBA,YAAY,CAACc,MAAD,CADW,GAEtB,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEA,MAAM,CAACD,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,KAAK,kCACNC,MAAM,CAACC,WADD;AAETjB,MAAAA,KAAK,EAALA;AAFS,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,CAFL;AAWA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CACXgB,MAAM,CAACE,SADI,EAEX;AAACC,MAAAA,eAAe,EAAEpB;AAAlB,KAFW,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGgB,MAJH,EAME,oBAAC,KAAD;AAAQ,IAAA,KAAK,EAAEC,MAAM,CAACI,KAAtB;AAA6B,IAAA,WAAW,EAAE;AAACC,MAAAA,WAAW,EAAE,CAAd;AAAiBC,MAAAA,WAAW,EAAEtB;AAA9B,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEgB,MAAM,CAACO,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,SAAR,CADR;AAEE,IAAA,KAAK,EAAEP,MAAM,CAACQ,aAFhB;AAGE,IAAA,SAAS,EAAE,CAAC,EAAD,EAAK,EAAL,CAHb;AAIE,IAAA,SAAS,EAAE,CAACR,MAAM,CAACS,iBAAR,EAA2B;AAACzB,MAAAA,KAAK,EAALA;AAAD,KAA3B,CAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAEQ,IAAZ;AAAkB,IAAA,QAAQ,EAAEA,IAAI,CAAC,CAAD,CAAJ,CAAQE,GAAR,CAAY,UAAAgB,CAAC;AAAA,aAAI,EAAJ;AAAA,KAAb,CAA5B;AAAkD,IAAA,SAAS,EAAE,CAAC,EAAD,EAAK,EAAL,CAA7D;AAAuE,IAAA,KAAK,EAAEV,MAAM,CAACW,QAArF;AAA+F,IAAA,SAAS,EAAEX,MAAM,CAACY,YAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CANF,CADF;AAoBD;AAGH,IAAMZ,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACTC,IAAAA,eAAe,EAAE,MADR;AAETY,IAAAA,UAAU,EAAE,EAFH;AAGTC,IAAAA,aAAa,EAAE,EAHN;AAITC,IAAAA,WAAW,EAAE,EAJJ;AAKTC,IAAAA,YAAY,EAAE,EALL;AAMTC,IAAAA,UAAU,EAAE;AANH,GADkB;AAS7BpB,EAAAA,MAAM,EAAE;AACNiB,IAAAA,aAAa,EAAE,EADT;AAEND,IAAAA,UAAU,EAAE;AAFN,GATqB;AAa7Bd,EAAAA,WAAW,EAAE;AACXmB,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,SAAS,EAAE;AAFA,GAbgB;AAiB7BjB,EAAAA,KAAK,EAAE;AACLkB,IAAAA,QAAQ,EAAE;AADL,GAjBsB;AAoB7Bf,EAAAA,YAAY,EAAE;AACZgB,IAAAA,aAAa,EAAE;AADH,GApBe;AAuB7BZ,EAAAA,QAAQ,EAAE,EAvBmB;AA0B7BH,EAAAA,aAAa,EAAE;AACbgB,IAAAA,KAAK,EAAE;AADM,GA1Bc;AA8B7Bf,EAAAA,iBAAiB,EAAE;AACjBW,IAAAA,QAAQ,EAAE,EADO;AAEjBK,IAAAA,UAAU,EAAE,EAFK;AAGjBC,IAAAA,OAAO,EAAE;AAHQ;AA9BU,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Table, TableWrapper, Row, Rows, Col } from '@deb-95/react-native-table-component';\r\n\r\nexport default function ResultTableBase({\r\n  data,\r\n  bgColor, \r\n  color, \r\n  renderCell = null,\r\n  renderHeader = null\r\n}) {\r\n  // data = {date: .., weigths: [], repetitions: []}\r\n\r\n    const twoDimensionalArray = Object.values(data)\r\n    console.log(twoDimensionalArray)\r\n\r\n    let rows;\r\n\r\n    if (renderCell) {\r\n      const rowNames = [\r\n        'weights',\r\n        'repetitions'\r\n      ]\r\n      rows = twoDimensionalArray.map(\r\n        (row, rowIndex) => row.map(\r\n          (val, cellIndex) => renderCell(val, cellIndex, rowNames[rowIndex])\r\n        )\r\n      )\r\n    } else {\r\n      rows = twoDimensionalArray\r\n    }\r\n\r\n    const header = renderHeader \r\n      ? renderHeader(styles)\r\n      : (<View style={styles.header}>\r\n          <Text style={{\r\n            ...styles.headerTitle,\r\n            color\r\n          }}>\r\n            Date\r\n          </Text>\r\n        </View>)\r\n\r\n    return (\r\n      <View style={[\r\n        styles.container,\r\n        {backgroundColor: bgColor}\r\n      ]}>\r\n        {header}\r\n\r\n        <Table  style={styles.table} borderStyle={{borderWidth: 1, borderColor: color}}>\r\n          <TableWrapper style={styles.tableWrapper}>\r\n            <Col \r\n              data={['Вес', 'Повторы']} \r\n              style={styles.tableRowTitle} \r\n              heightArr={[40, 40]} \r\n              textStyle={[styles.tableRowTitleText, {color}]}\r\n            />\r\n            <Rows data={rows} widthArr={rows[0].map(_ => 50)} heightArr={[40, 40]} style={styles.tableRow} textStyle={styles.tableRowText} />\r\n          </TableWrapper>\r\n        </Table>\r\n      </View>\r\n    )\r\n  }\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: '#fff',\r\n      paddingTop: 15,\r\n      paddingBottom: 15,\r\n      paddingLeft: 15,\r\n      paddingRight: 15,\r\n      alignItems: 'flex-start'\r\n    },\r\n    header: {\r\n      paddingBottom: 10,\r\n      paddingTop: 10,\r\n    },\r\n    headerTitle: {\r\n      fontSize: 20,\r\n      textAlign: 'center',\r\n    },\r\n    table: {\r\n      minWidth: 210\r\n    },\r\n    tableWrapper: {\r\n      flexDirection: 'row',\r\n    },\r\n    tableRow: {\r\n\r\n    },\r\n    tableRowTitle: {\r\n      width: 150\r\n\r\n    },\r\n    tableRowTitleText: {\r\n      fontSize: 18,\r\n      lineHeight: 40,\r\n      padding: 5    \r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}