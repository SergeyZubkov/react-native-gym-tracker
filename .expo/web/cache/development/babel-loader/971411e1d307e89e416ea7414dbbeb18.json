{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\timer-setup\\\\TimerSetup.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useSelector } from 'react-redux';\nimport { toMinSec } from \"../../utils\";\nimport SecondsInput from \"./seconds-input\";\nexport default function TimerSetup() {\n  var _this = this;\n\n  var _useSelector = useSelector(function (state) {\n    return state.timer;\n  }),\n      restInterval = _useSelector.restInterval,\n      workInterval = _useSelector.workInterval,\n      rounds = _useSelector.rounds;\n\n  var _useState = useState({\n    restInterval: false,\n    workInterval: false,\n    rounds: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisibility = _useState2[0],\n      setModalVisibility = _useState2[1];\n\n  var timerParams = [{\n    paramName: 'Время тренировки',\n    value: toMinSec(workInterval)\n  }, {\n    paramName: 'Время отдыха',\n    value: toMinSec(restInterval)\n  }, {\n    paramName: 'Раунды',\n    value: rounds.toString()\n  }];\n\n  var showModal = function showModal(paramName) {\n    modalVisibility[paramName] = true;\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"), React.createElement(FlatList, {\n    style: styles.list,\n    keyExtractor: function keyExtractor(item) {\n      return item.paramName;\n    },\n    data: timerParams,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          seperators = _ref.seperators;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"#e1e2e1\",\n        onPress: function onPress() {\n          return showModal(item.paramName);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.itemTitle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, item.paramName), React.createElement(Text, {\n        style: styles.itemValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }\n      }, item.value)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), timerParams.map(function (p) {\n    return React.createElement(Modal, {\n      animationType: \"slide\",\n      transparent: false,\n      visible: modalVisibility,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.modalView,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, React.createElement(SecondsInput, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    })));\n  }));\n}\nvar styles = StyleSheet.create({\n  list: {\n    borderBottomColor: \"#efefef\",\n    borderBottomWidth: 1\n  },\n  header: {\n    fontSize: 18,\n    textAlign: 'center',\n    padding: 7\n  },\n  item: {\n    backgroundColor: 'white',\n    borderTopColor: \"#efefef\",\n    borderTopWidth: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 60,\n    paddingLeft: 15,\n    paddingRight: 15\n  },\n  itemTitle: {\n    fontSize: 16,\n    color: \"#464646\"\n  },\n  itemValue: {\n    fontSize: 18\n  },\n  modalContainer: {\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/timer-setup/TimerSetup.js"],"names":["React","useState","useSelector","toMinSec","SecondsInput","TimerSetup","state","timer","restInterval","workInterval","rounds","modalVisibility","setModalVisibility","timerParams","paramName","value","toString","showModal","styles","header","list","item","index","seperators","itemTitle","itemValue","map","p","setModalVisible","modalVisible","modalView","StyleSheet","create","borderBottomColor","borderBottomWidth","fontSize","textAlign","padding","backgroundColor","borderTopColor","borderTopWidth","flexDirection","justifyContent","alignItems","height","paddingLeft","paddingRight","color","modalContainer","width"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableHighlight, Modal } from 'react-native';\r\nimport { useSelector } from 'react-redux';\r\nimport { toMinSec } from '../../utils';\r\nimport SecondsInput from './seconds-input';\r\n\r\nexport default function TimerSetup() {\r\n    const { restInterval, workInterval, rounds } = useSelector(state => state.timer);\r\n    const [modalVisibility, setModalVisibility] = useState({\r\n        restInterval: false,\r\n        workInterval: false,\r\n        rounds: false\r\n    });\r\n\r\n    const timerParams = [\r\n        {paramName: 'Время тренировки', value: toMinSec(workInterval)},\r\n        {paramName: 'Время отдыха', value: toMinSec(restInterval)},\r\n        {paramName: 'Раунды', value: rounds.toString()}\r\n    ]\r\n\r\n    const showModal = paramName => {\r\n        modalVisibility[paramName] = true\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Text style={styles.header}>Текущие настройки</Text>\r\n            <FlatList \r\n                style={styles.list}\r\n                keyExtractor={item => item.paramName}\r\n                data={timerParams}\r\n                renderItem={\r\n                    ({item, index, seperators}) => (\r\n                    <TouchableHighlight\r\n                        underlayColor=\"#e1e2e1\"\r\n                        onPress={() => showModal(item.paramName)}\r\n                    >\r\n                        <View style={styles.item}>\r\n                            <Text style={styles.itemTitle}>{item.paramName}</Text>\r\n                            <Text style={styles.itemValue}>{item.value}</Text>\r\n                        </View>\r\n                    </TouchableHighlight>\r\n                    )}\r\n            />\r\n            {timerParams.map(p => (\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={false}\r\n                    visible={modalVisibility}\r\n                    onRequestClose={() => {\r\n                        setModalVisible(!modalVisible);\r\n                    }}\r\n                >\r\n                    <View style={styles.modalView}>\r\n                        <SecondsInput />\r\n                    </View>\r\n                </Modal>\r\n            ))}\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    list: {\r\n        borderBottomColor: \"#efefef\",\r\n        borderBottomWidth: 1\r\n    },\r\n    header: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        padding: 7\r\n    },\r\n    item: {\r\n        backgroundColor: 'white',\r\n        borderTopColor: \"#efefef\",\r\n        borderTopWidth: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: 60,\r\n        paddingLeft: 15,\r\n        paddingRight: 15\r\n    },\r\n    itemTitle: {\r\n        fontSize: 16,\r\n        color: \"#464646\",\r\n    },\r\n    itemValue: {\r\n        fontSize: 18\r\n    },\r\n    modalContainer: {\r\n        width: '100%',\r\n        height: '100%',\r\n        backgroundColor: 'white',\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}