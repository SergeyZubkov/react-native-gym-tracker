{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\timer-setup\\\\TimerSetup.js\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nexport default function TimerSetup() {\n  var _this = this;\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0435 \\u043D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\"), React.createElement(FlatList, {\n    style: styles.list,\n    keyExtractor: function keyExtractor(item) {\n      return item.paramName;\n    },\n    data: [{\n      paramName: 'Время тренировки',\n      value: '00:45'\n    }, {\n      paramName: 'Время отдыха',\n      value: '00:45'\n    }, {\n      paramName: 'Раунды',\n      value: '3'\n    }],\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item,\n          index = _ref.index,\n          seperators = _ref.seperators;\n      return React.createElement(TouchableHighlight, {\n        underlayColor: \"#e1e2e1\",\n        onPress: function onPress() {\n          return false;\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.itemTitle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }\n      }, item.paramName), React.createElement(Text, {\n        style: styles.itemValue,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }, item.value)));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), React.createElement(Modal, {\n    animationType: \"slide\",\n    transparent: true,\n    visible: modalVisible,\n    onRequestClose: function onRequestClose() {\n      Alert.alert(\"Modal has been closed.\");\n      setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  }, React.createElement(View, {\n    style: styles.centeredView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.modalView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.modalText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"Hello World!\"), React.createElement(Pressable, {\n    style: [styles.button, styles.buttonClose],\n    onPress: function onPress() {\n      return setModalVisible(!modalVisible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.textStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Hide Modal\"))))));\n}\nvar styles = StyleSheet.create({\n  list: {\n    borderBottomColor: \"#efefef\",\n    borderBottomWidth: 1\n  },\n  header: {\n    fontSize: 18,\n    textAlign: 'center',\n    padding: 7\n  },\n  item: {\n    backgroundColor: 'white',\n    borderTopColor: \"#efefef\",\n    borderTopWidth: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 40,\n    paddingLeft: 10,\n    paddingRight: 10\n  },\n  itemTitle: {\n    fontSize: 16,\n    color: \"#464646\"\n  },\n  itemValue: {\n    fontSize: 18\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/timer-setup/TimerSetup.js"],"names":["React","TimerSetup","styles","header","list","item","paramName","value","index","seperators","itemTitle","itemValue","modalVisible","Alert","alert","setModalVisible","centeredView","modalView","modalText","button","buttonClose","textStyle","StyleSheet","create","borderBottomColor","borderBottomWidth","fontSize","textAlign","padding","backgroundColor","borderTopColor","borderTopWidth","flexDirection","justifyContent","alignItems","height","paddingLeft","paddingRight","color"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, View, Text, FlatList, TouchableHighlight } from 'react-native';\r\n\r\nexport default function TimerSetup() {\r\n    return (\r\n        <View>\r\n            <Text style={styles.header}>Текущие настройки</Text>\r\n            <FlatList \r\n                style={styles.list}\r\n                keyExtractor={item => item.paramName}\r\n                data={[\r\n                    {paramName: 'Время тренировки', value: '00:45'},\r\n                    {paramName: 'Время отдыха', value: '00:45'},\r\n                    {paramName: 'Раунды', value: '3'}\r\n                ]}\r\n                renderItem={\r\n                    ({item, index, seperators}) => (\r\n                    <TouchableHighlight\r\n                        underlayColor=\"#e1e2e1\"\r\n                        onPress={() => false}\r\n                    >\r\n                        <View style={styles.item}>\r\n                            <Text style={styles.itemTitle}>{item.paramName}</Text>\r\n                            <Text style={styles.itemValue}>{item.value}</Text>\r\n                        </View>\r\n                    </TouchableHighlight>\r\n                    )}\r\n            />\r\n                  <Modal\r\n            animationType=\"slide\"\r\n            transparent={true}\r\n            visible={modalVisible}\r\n            onRequestClose={() => {\r\n            Alert.alert(\"Modal has been closed.\");\r\n            setModalVisible(!modalVisible);\r\n            }}\r\n        >\r\n            <View style={styles.centeredView}>\r\n            <View style={styles.modalView}>\r\n                <Text style={styles.modalText}>Hello World!</Text>\r\n                <Pressable\r\n                style={[styles.button, styles.buttonClose]}\r\n                onPress={() => setModalVisible(!modalVisible)}\r\n                >\r\n                <Text style={styles.textStyle}>Hide Modal</Text>\r\n                </Pressable>\r\n            </View>\r\n            </View>\r\n        </Modal>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    list: {\r\n        borderBottomColor: \"#efefef\",\r\n        borderBottomWidth: 1\r\n    },\r\n    header: {\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        padding: 7\r\n    },\r\n    item: {\r\n        backgroundColor: 'white',\r\n        borderTopColor: \"#efefef\",\r\n        borderTopWidth: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        height: 40,\r\n        paddingLeft: 10,\r\n        paddingRight: 10\r\n    },\r\n    itemTitle: {\r\n        fontSize: 16,\r\n        color: \"#464646\",\r\n    },\r\n    itemValue: {\r\n        fontSize: 18\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}