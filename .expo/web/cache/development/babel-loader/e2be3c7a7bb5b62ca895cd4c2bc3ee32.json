{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\timer-setup\\\\timer-param-input\\\\TimerParamInput.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NumberInput, NumberKeyboard } from \"../../../components\";\nimport { Feather } from '@expo/vector-icons';\nimport { toMinSec } from \"../../../utils\";\nimport { useDispatch } from 'react-redux';\nimport { changeTimerParam } from \"../timerSlice\";\nexport default function SecondsInput(_ref) {\n  var title = _ref.title,\n      onCancel = _ref.onCancel,\n      onSubmit = _ref.onSubmit,\n      paramName = _ref.paramName;\n\n  var _useState = useState('00'),\n      _useState2 = _slicedToArray(_useState, 2),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit() {\n    dispatch(changeTimerParam({\n      paramName: paramName,\n      value: +seconds\n    }));\n    onSubmit();\n  };\n\n  return React.createElement(View, {\n    styles: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, title)), React.createElement(View, {\n    style: styles.minSec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.minSecText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, toMinSec(seconds))), React.createElement(NumberInput, {\n    value: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 150\n  },\n  title: {\n    borderBottomWidth: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  titleText: {\n    fontSize: 18,\n    fontWeight: \"700\"\n  },\n  minSec: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  minSecText: {\n    fontSize: 18\n  },\n  sec: {\n    width: 250,\n    height: 70,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    alignSelf: 'center',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#cbcaca'\n  },\n  secText: {\n    fontSize: 50\n  },\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: \"space-around\"\n  },\n  button: {\n    width: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/timer-setup/timer-param-input/TimerParamInput.js"],"names":["React","useState","NumberInput","NumberKeyboard","Feather","toMinSec","useDispatch","changeTimerParam","SecondsInput","title","onCancel","onSubmit","paramName","seconds","setSeconds","dispatch","handleSubmit","value","styles","container","titleText","minSec","minSecText","StyleSheet","create","paddingTop","borderBottomWidth","padding","alignItems","fontSize","fontWeight","sec","width","height","flexDirection","justifyContent","alignSelf","borderTopWidth","borderColor","secText","buttons","button"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, View, Text, Pressable, Button } from 'react-native';\r\nimport { NumberInput, NumberKeyboard } from '../../../components';\r\nimport { Feather } from '@expo/vector-icons'; \r\nimport { toMinSec } from '../../../utils';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeTimerParam } from '../timerSlice';\r\n\r\nexport default function SecondsInput({\r\n    title,\r\n    onCancel,\r\n    onSubmit,\r\n    paramName\r\n}) {\r\n    const [seconds, setSeconds] = useState('00');\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = () => {\r\n        dispatch(changeTimerParam({\r\n            paramName,\r\n            value: +seconds\r\n        }))\r\n        onSubmit()\r\n    }\r\n\r\n    return (\r\n        <View styles={styles.container}>\r\n            <View style={styles.title}>\r\n                <Text style={styles.titleText}>\r\n                    {title}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.minSec}>\r\n                <Text style={styles.minSecText}>\r\n                    {toMinSec(seconds)}\r\n                </Text>\r\n            </View>\r\n            <NumberInput\r\n                value\r\n            />\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 150,\r\n    },\r\n    title: {\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n        alignItems: 'center'\r\n    },\r\n    titleText: {\r\n        fontSize: 18,\r\n        fontWeight: \"700\"\r\n    },\r\n    minSec: {\r\n        padding: 20,\r\n        alignItems: 'center'\r\n    },\r\n    minSecText: {\r\n        fontSize: 18\r\n    },\r\n    sec: {\r\n        width: 250,\r\n        height: 70,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderColor: '#cbcaca',\r\n    },\r\n    secText: {\r\n        fontSize: 50\r\n    },\r\n    buttons: {\r\n        flexDirection: 'row',\r\n        justifyContent: \"space-around\"\r\n    },\r\n    button: {\r\n        width: 100\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}