{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\Navigation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator, TransitionPresets } from '@react-navigation/stack';\nimport { Exercise, ExerciseList } from \"./screens\";\nvar Stack = createStackNavigator();\nexport default function Navigation() {\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route,\n          navigation = _ref.navigation;\n      return _objectSpread({\n        gestureEnabled: true,\n        cardOverlayEnabled: true\n      }, TransitionPresets.SlideFromRightIOS);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"\\u0423\\u043F\\u0440\\u0430\\u0436\\u043D\\u0435\\u043D\\u0438\\u044F\",\n    component: ExerciseList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"\\u0423\\u043F\\u0440\\u0430\\u0436\\u043D\\u0435\\u043D\\u0438\\u0435\",\n    component: Exercise,\n    options: function options(_ref2) {\n      var route = _ref2.route;\n      return {\n        title: route.params.title\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/Navigation.js"],"names":["NavigationContainer","createStackNavigator","TransitionPresets","Exercise","ExerciseList","Stack","Navigation","route","navigation","gestureEnabled","cardOverlayEnabled","SlideFromRightIOS","title","params"],"mappings":";;;;;;;AAAA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SACEC,oBADF,EAEEC,iBAFF,QAGO,yBAHP;AAIA,SAASC,QAAT,EAAmBC,YAAnB;AAEA,IAAMC,KAAK,GAAGJ,oBAAoB,EAAlC;AAEA,eAAe,SAASK,UAAT,GAAsB;AACjC,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,UAAUC,UAAV,QAAUA,UAAV;AAAA;AACbC,QAAAA,cAAc,EAAE,IADH;AAEbC,QAAAA,kBAAkB,EAAE;AAFP,SAGVR,iBAAiB,CAACS,iBAHR;AAAA,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,8DADP;AAEE,IAAA,SAAS,EAAEP,YAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAWE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,8DADP;AAEE,IAAA,SAAS,EAAED,QAFb;AAGE,IAAA,OAAO,EAAE;AAAA,UAAEI,KAAF,SAAEA,KAAF;AAAA,aAAc;AACrBK,QAAAA,KAAK,EAAEL,KAAK,CAACM,MAAN,CAAaD;AADC,OAAd;AAAA,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF,CADF;AAuBD","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\r\nimport {\r\n  createStackNavigator,\r\n  TransitionPresets,\r\n} from '@react-navigation/stack';\r\nimport { Exercise, ExerciseList} from './screens'\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Navigation() {\r\n    return (\r\n      <NavigationContainer>\r\n        <Stack.Navigator\r\n          screenOptions={({ route, navigation }) => ({\r\n            gestureEnabled: true,\r\n            cardOverlayEnabled: true,\r\n            ...TransitionPresets.SlideFromRightIOS,\r\n          })}\r\n        >\r\n          <Stack.Screen \r\n            name=\"Упражнения\" \r\n            component={ExerciseList} \r\n          />\r\n          <Stack.Screen \r\n            name=\"Упражнение\" \r\n            component={Exercise}\r\n            options={({route}) => ({\r\n              title: route.params.title\r\n            })}\r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}