{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\exercise\\\\result-table\\\\ResultTableForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ResultTableBase from \"./ResultTableBase\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { useDispatch } from 'react-redux';\nimport { addResult } from \"../resultListSlice\";\nimport { Date } from \"../../../components\";\n\nfunction Cell(_ref) {\n  var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? 0 : _ref$value,\n      index = _ref.index,\n      onChange = _ref.onChange,\n      rowName = _ref.rowName;\n\n  var handleChange = function handleChange(val) {\n    val = +val;\n    if (Number.isNaN(val)) return;\n    console.log(val);\n    if (!val) val = 0;\n    onChange(rowName, index, val);\n  };\n\n  return React.createElement(View, {\n    style: styles.cell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.cellText,\n    name: index,\n    value: value,\n    keyboardType: \"numeric\",\n    onChangeText: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction Header(_ref2) {\n  var styles = _ref2.styles,\n      color = _ref2.color,\n      date = _ref2.date,\n      showBtnSubmit = _ref2.showBtnSubmit,\n      onSubmit = _ref2.onSubmit;\n  return React.createElement(View, {\n    style: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.headerTitle), {}, {\n      color: color\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Date, {\n    value: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), showBtnSubmit && React.createElement(TouchableOpacity, {\n    onPress: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, React.createElement(Ionicons, {\n    name: \"md-checkmark-sharp\",\n    size: 32,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }\n  })));\n}\n\nexport default function ResultTableForm() {\n  var _this = this;\n\n  var _useState = useState({\n    weights: [0],\n    repetitions: [0]\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var date = new Date();\n  var dispatch = useDispatch();\n\n  var handleChangeCell = function handleChangeCell(key, index, val) {\n    console.log(key, index, val);\n    setState(function (prevState) {\n      var nextState = _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, key, state[key].map(function (v, i) {\n        return i === index ? val : v;\n      })));\n\n      if (index === state[key].length - 1 && nextState.weights[prevState.weights.length - 1] !== 0 && nextState.repetitions[prevState.repetitions.length - 1] !== 0) {\n        nextState = {\n          weights: [].concat(_toConsumableArray(nextState.weights), [0]),\n          repetitions: [].concat(_toConsumableArray(nextState.repetitions), [0])\n        };\n      }\n\n      if (val === 0 && index !== state[key].length - 1 && Object.keys(nextState).filter(function (k) {\n        return k !== key;\n      }).every(function (k) {\n        return nextState[k][index] === 0;\n      })) {\n        console.log('remove column');\n        nextState = Object.keys(nextState).reduce(function (state, key) {\n          state[key] = nextState[key].filter(function (_, idx) {\n            return idx !== index;\n          });\n          return state;\n        }, {});\n      }\n\n      return nextState;\n    });\n  };\n\n  var firstKey = Object.keys(state)[0];\n  var dataAvailable = false;\n\n  if (state[firstKey].some(function (val, i) {\n    return val && Object.keys(state).filter(function (k) {\n      return k !== firstKey;\n    }).every(function (k) {\n      return state[k][i];\n    });\n  })) {\n    dataAvailable = true;\n  }\n\n  var handleSubmit = function handleSubmit() {\n    dispatch(addResult(_objectSpread({\n      date: date\n    }, state)));\n  };\n\n  return React.createElement(ResultTableBase, {\n    data: state,\n    color: \"white\",\n    bgColor: \"#d32f2f\",\n    renderCell: function renderCell(value, index, rowName) {\n      return React.createElement(Cell, {\n        value: value,\n        index: index,\n        key: index,\n        onChange: handleChangeCell,\n        rowName: rowName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      });\n    },\n    renderHeader: function renderHeader(styles) {\n      return React.createElement(Header, {\n        styles: styles,\n        date: date,\n        color: \"white\",\n        showBtnSubmit: dataAvailable,\n        onSubmit: handleSubmit,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  cell: {},\n  cellText: {\n    lineHeight: 40,\n    fontSize: 18,\n    textAlign: 'center',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/exercise/result-table/ResultTableForm.js"],"names":["React","useState","ResultTableBase","Ionicons","useDispatch","addResult","Date","Cell","value","index","onChange","rowName","handleChange","val","Number","isNaN","console","log","styles","cell","cellText","Header","color","date","showBtnSubmit","onSubmit","header","headerTitle","ResultTableForm","weights","repetitions","state","setState","dispatch","handleChangeCell","key","prevState","nextState","map","v","i","length","Object","keys","filter","k","every","reduce","_","idx","firstKey","dataAvailable","some","handleSubmit","StyleSheet","create","lineHeight","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, TextInput, View, Text, TouchableOpacity } from 'react-native';\r\nimport ResultTableBase from './ResultTableBase';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addResult } from '../resultListSlice'\r\nimport { Date } from '../../../components'\r\n\r\nfunction Cell({value = 0, index, onChange, rowName}) {\r\n\r\n  const handleChange = val => {\r\n    val = +val\r\n\r\n    if (Number.isNaN(val)) return \r\n    console.log(val)\r\n    if (!val) val = 0 \r\n    onChange(rowName, index, val)\r\n  }\r\n  return (\r\n    <View style={styles.cell}>\r\n      <TextInput\r\n          style={styles.cellText}\r\n          name={index}\r\n          value={value}\r\n          keyboardType=\"numeric\"\r\n          onChangeText={handleChange}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nfunction Header({\r\n  styles,\r\n  color,\r\n  date,\r\n  showBtnSubmit,\r\n  onSubmit\r\n}) {\r\n  return (\r\n    <View style={styles.header}>\r\n      <Text style={{\r\n        ...styles.headerTitle,\r\n        color\r\n      }}>\r\n        <Date value={date} />\r\n      </Text>\r\n      {\r\n        showBtnSubmit&&(<TouchableOpacity\r\n          onPress={onSubmit}\r\n        >\r\n           <Ionicons name=\"md-checkmark-sharp\" size={32} color=\"white\" />\r\n        </TouchableOpacity>)\r\n      }\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default function ResultTableForm() {\r\n  const [state, setState] = useState({\r\n    weights: [0],\r\n    repetitions: [0]\r\n  })\r\n\r\n  const date = new Date();\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleChangeCell = (key, index, val) => {\r\n    console.log(key, index, val)\r\n\r\n    setState(prevState => {\r\n      let nextState = {\r\n        ...prevState, \r\n        [key]: state[key].map(\r\n          (v, i) => i === index ? val : v\r\n        )\r\n      }\r\n\r\n      if (\r\n        index === state[key].length - 1 &&\r\n        (nextState.weights[prevState.weights.length-1] !== 0 && nextState.repetitions[prevState.repetitions.length-1] !== 0)\r\n      ) {\r\n        nextState = {\r\n          weights: [...nextState.weights, 0],\r\n          repetitions: [...nextState.repetitions, 0]\r\n        }\r\n      }\r\n\r\n      if (\r\n        val === 0 &&\r\n        index !== state[key].length - 1 &&\r\n        Object.keys(nextState).filter(k => k !== key).every(k => nextState[k][index] === 0)\r\n      ) {\r\n        console.log('remove column')\r\n        nextState = Object.keys(nextState).reduce(\r\n          (state, key) => {\r\n            state[key] = nextState[key].filter((_, idx) => idx !== index )\r\n            return state\r\n          }\r\n        , {})\r\n      }\r\n      \r\n      return nextState\r\n    })\r\n  }\r\n\r\n  const firstKey = Object.keys(state)[0];\r\n  let dataAvailable = false;\r\n  if (\r\n    state[firstKey].some((val, i) => {\r\n      return val&&\r\n            Object.keys(state).filter(k => k !== firstKey).every(k => state[k][i])\r\n    })\r\n  ) {\r\n    dataAvailable = true\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(addResult({\r\n      date,\r\n      ...state\r\n    }))\r\n  }\r\n\r\n  return (\r\n      <ResultTableBase\r\n          data={state}\r\n          color=\"white\"\r\n          bgColor=\"#d32f2f\"\r\n          renderCell={\r\n            (value, index, rowName) => (\r\n              <Cell \r\n                value={value} \r\n                index={index} \r\n                key={index} \r\n                onChange={handleChangeCell} \r\n                rowName={rowName} \r\n              />\r\n          )}\r\n          renderHeader={\r\n            (styles) => <Header \r\n              styles={styles} \r\n              date={date} \r\n              color=\"white\" \r\n              showBtnSubmit={dataAvailable} \r\n              onSubmit={handleSubmit}\r\n            />\r\n          }\r\n      />\r\n  )\r\n}\r\n\r\n  const styles = StyleSheet.create({\r\n    cell: {\r\n    },\r\n    cellText: {\r\n        lineHeight: 40,\r\n        fontSize: 18,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n\r\n    }\r\n  });"]},"metadata":{},"sourceType":"module"}