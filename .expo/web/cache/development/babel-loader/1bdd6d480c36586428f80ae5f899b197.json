{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\exercise\\\\timer\\\\TimerWrapper.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Timer from \"./Timer\";\nimport Collapsible from 'react-native-collapsible';\nexport default function TimerWrapper() {\n  var _this = this;\n\n  var _useState = useState([0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeSections = _useState2[0],\n      setActiveSections = _useState2[1];\n\n  var renderHeader = function renderHeader(section) {\n    return React.createElement(View, {\n      style: styles.header,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.headerText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }\n    }, section.title));\n  };\n\n  var renderContent = function renderContent(section) {\n    return React.createElement(Timer, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    });\n  };\n\n  var updateSections = function updateSections(activeSections) {\n    setActiveSections(activeSections);\n  };\n\n  return React.createElement(Accordion, {\n    align: \"center\",\n    activeSections: activeSections,\n    sections: [{\n      title: 'Таймер'\n    }],\n    renderHeader: renderHeader,\n    renderContent: renderContent,\n    onChange: updateSections,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  });\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/exercise/timer/TimerWrapper.js"],"names":["React","useState","Timer","Collapsible","TimerWrapper","activeSections","setActiveSections","renderHeader","section","styles","header","headerText","title","renderContent","updateSections","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,OAAOC,KAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACnC,kBAA4CH,QAAQ,CAAC,CAAC,CAAD,CAAD,CAApD;AAAA;AAAA,MAAOI,cAAP;AAAA,MAAuBC,iBAAvB;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAChC,WACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCH,OAAO,CAACI,KAAzC,CADF,CADF;AAKD,GAND;;AAQA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACL,OAAD,EAAa;AACjC,WACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD;;AAMA,MAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACT,cAAD,EAAoB;AACzCC,IAAAA,iBAAiB,CAACD,cAAD,CAAjB;AACD,GAFD;;AAIA,SACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,QADV;AAEI,IAAA,cAAc,EAAEA,cAFpB;AAGI,IAAA,QAAQ,EAAE,CAAC;AAACO,MAAAA,KAAK,EAAE;AAAR,KAAD,CAHd;AAII,IAAA,YAAY,EAAEL,YAJlB;AAKI,IAAA,aAAa,EAAEM,aALnB;AAMI,IAAA,QAAQ,EAAEC,cANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAUH;AACD,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native';\r\nimport Timer from './Timer';\r\nimport Collapsible from 'react-native-collapsible';\r\n\r\nexport default function TimerWrapper() {\r\n    const [activeSections, setActiveSections] = useState([0])\r\n  \r\n    const renderHeader = (section) => {\r\n      return (\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>{section.title}</Text>\r\n        </View>\r\n      );\r\n    };\r\n  \r\n    const renderContent = (section) => {\r\n      return (\r\n        <Timer />\r\n      );\r\n    };\r\n  \r\n    const updateSections = (activeSections) => {\r\n      setActiveSections(activeSections);\r\n    };\r\n\r\n    return (\r\n        <Accordion\r\n            align=\"center\"\r\n            activeSections={activeSections}\r\n            sections={[{title: 'Таймер'}]}\r\n            renderHeader={renderHeader}\r\n            renderContent={renderContent}\r\n            onChange={updateSections}\r\n        /> \r\n    )\r\n}\r\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}