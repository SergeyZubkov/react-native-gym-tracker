{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\screens\\\\timer-setup\\\\seconds-input\\\\SecondsInput.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NumberKeyboard } from \"../../../components\";\nimport { Feather } from '@expo/vector-icons';\nimport { toMinSec } from \"../../../utils\";\nimport { useDispatch } from 'react-redux';\nimport { changeTimerParam } from \"../timerSlice\";\nexport default function SecondsInput(_ref) {\n  var title = _ref.title,\n      onCancel = _ref.onCancel,\n      onSubmit = _ref.onSubmit;\n\n  var _useState = useState('00'),\n      _useState2 = _slicedToArray(_useState, 2),\n      seconds = _useState2[0],\n      setSeconds = _useState2[1];\n\n  var prepend = function prepend(string, char) {\n    var chars = string.split('');\n    chars.push(char);\n    return chars.slice(-2).join(\"\");\n  };\n\n  var append = function append(string, char) {\n    var chars = string.split('');\n    chars.unshift(char);\n    return chars.slice(0, 2).join(\"\");\n  };\n\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit() {\n    return dispatch(timerChangeParam(paramName, val));\n  };\n\n  return React.createElement(View, {\n    styles: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.titleText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, title)), React.createElement(View, {\n    style: styles.minSec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.minSecText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, toMinSec(seconds))), React.createElement(View, {\n    style: styles.sec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.secText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, seconds), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, React.createElement(Pressable, {\n    onPress: function onPress() {\n      return setSeconds(function (seconds) {\n        return append(seconds, '0');\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, React.createElement(Feather, {\n    name: \"delete\",\n    size: 40,\n    color: \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  })))), React.createElement(NumberKeyboard, {\n    onKeyPress: function onKeyPress(k) {\n      return setSeconds(function (seconds) {\n        return prepend(seconds, k);\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.buttons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    onPress: onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    color: \"#d3d3d3\",\n    title: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, React.createElement(Button, {\n    style: styles.button,\n    title: \"\\u041E\\u043A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 150\n  },\n  title: {\n    borderBottomWidth: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  titleText: {\n    fontSize: 18,\n    fontWeight: \"700\"\n  },\n  minSec: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  minSecText: {\n    fontSize: 18\n  },\n  sec: {\n    width: 250,\n    height: 70,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    alignSelf: 'center',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderColor: '#cbcaca'\n  },\n  secText: {\n    fontSize: 50\n  },\n  buttons: {\n    flexDirection: 'row',\n    justifyContent: \"space-around\"\n  },\n  button: {\n    width: 100\n  }\n});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/screens/timer-setup/seconds-input/SecondsInput.js"],"names":["React","useState","NumberKeyboard","Feather","toMinSec","useDispatch","changeTimerParam","SecondsInput","title","onCancel","onSubmit","seconds","setSeconds","prepend","string","char","chars","split","push","slice","join","append","unshift","dispatch","handleSubmit","timerChangeParam","paramName","val","styles","container","titleText","minSec","minSecText","sec","secText","k","buttons","button","StyleSheet","create","paddingTop","borderBottomWidth","padding","alignItems","fontSize","fontWeight","width","height","flexDirection","justifyContent","alignSelf","borderTopWidth","borderColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, View, Text, Pressable, Button } from 'react-native';\r\nimport { NumberKeyboard } from '../../../components';\r\nimport { Feather } from '@expo/vector-icons'; \r\nimport { toMinSec } from '../../../utils';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeTimerParam } from '../timerSlice'\r\n\r\nexport default function SecondsInput({\r\n    title,\r\n    onCancel,\r\n    onSubmit\r\n}) {\r\n    const [seconds, setSeconds] = useState('00');\r\n\r\n    const prepend = (string, char) => {\r\n        const chars = string.split('')\r\n        chars.push(char)\r\n        return chars.slice(-2).join(\"\")\r\n    }\r\n\r\n    const append = (string, char) => {\r\n        const chars = string.split('')\r\n        chars.unshift(char)\r\n        return chars.slice(0, 2).join(\"\")\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = () => dispatch(timerChangeParam(paramName, val))\r\n\r\n    return (\r\n        <View styles={styles.container}>\r\n            <View style={styles.title}>\r\n                <Text style={styles.titleText}>\r\n                    {title}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.minSec}>\r\n                <Text style={styles.minSecText}>\r\n                    {toMinSec(seconds)}\r\n                </Text>\r\n            </View>\r\n            <View style={styles.sec}>\r\n                <Text style={styles.secText}>\r\n                   {seconds} \r\n                </Text>\r\n                <View>\r\n                    <Pressable onPress={() => setSeconds(seconds => append(seconds, '0'))}>\r\n                        <Feather name=\"delete\" size={40} color=\"black\" />\r\n                    </Pressable>\r\n                </View>\r\n            </View>\r\n            <NumberKeyboard onKeyPress={(k) => setSeconds(seconds => prepend(seconds, k))}/>\r\n            <View style={styles.buttons}>\r\n                <View style={styles.button} onPress={onCancel}>\r\n                    <Button color=\"#d3d3d3\" title=\"Отмена\" />\r\n                </View>\r\n                <View style={styles.button} onPress={handleSubmit}>\r\n                    <Button style={styles.button} title=\"Ок\" />\r\n                </View>\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingTop: 150,\r\n    },\r\n    title: {\r\n        borderBottomWidth: 1,\r\n        padding: 10,\r\n        alignItems: 'center'\r\n    },\r\n    titleText: {\r\n        fontSize: 18,\r\n        fontWeight: \"700\"\r\n    },\r\n    minSec: {\r\n        padding: 20,\r\n        alignItems: 'center'\r\n    },\r\n    minSecText: {\r\n        fontSize: 18\r\n    },\r\n    sec: {\r\n        width: 250,\r\n        height: 70,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        alignSelf: 'center',\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n        borderColor: '#cbcaca',\r\n    },\r\n    secText: {\r\n        fontSize: 50\r\n    },\r\n    buttons: {\r\n        flexDirection: 'row',\r\n        justifyContent: \"space-around\"\r\n    },\r\n    button: {\r\n        width: 100\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}