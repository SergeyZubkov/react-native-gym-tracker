{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sergey\\\\Desktop\\\\work\\\\work\\\\react-native-gym-tracker\\\\src\\\\components\\\\Countdown.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nexport default function Countdown(_ref) {\n  var _ref$until = _ref.until,\n      until = _ref$until === void 0 ? 4 : _ref$until;\n\n  var _useState = useState(Math.max(until, 0)),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setNumber = _useState2[1];\n\n  var interval;\n  useEffect(function () {\n    var update = function update() {\n      if (number === 1) {\n        clearInterval(interval);\n      }\n\n      setNumber(function (number) {\n        return --number;\n      });\n    };\n\n    interval = setInterval(update, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, number));\n}\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["C:/Users/Sergey/Desktop/work/work/react-native-gym-tracker/src/components/Countdown.js"],"names":["React","useEffect","useState","useRef","Countdown","until","Math","max","number","setNumber","interval","update","clearInterval","setInterval","styles","StyleSheet","create"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAGA,eAAe,SAASC,SAAT,OAEZ;AAAA,wBADCC,KACD;AAAA,MADCA,KACD,2BADS,CACT;;AACC,kBAA4BH,QAAQ,CAChCI,IAAI,CAACC,GAAL,CAASF,KAAT,EAAgB,CAAhB,CADgC,CAApC;AAAA;AAAA,MAAOG,MAAP;AAAA,MAAeC,SAAf;;AAIA,MAAIC,QAAJ;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,UAAIH,MAAM,KAAK,CAAf,EAAkB;AACdI,QAAAA,aAAa,CAACF,QAAD,CAAb;AACH;;AAEDD,MAAAA,SAAS,CAAC,UAAAD,MAAM;AAAA,eAAI,EAAEA,MAAN;AAAA,OAAP,CAAT;AACH,KAND;;AAQAE,IAAAA,QAAQ,GAAGG,WAAW,CACnBF,MADmB,EAEpB,IAFoB,CAAtB;AAIA,WAAO;AAAA,aAAMC,aAAa,CAACF,QAAD,CAAnB;AAAA,KAAP;AACH,GAdQ,EAcN,EAdM,CAAT;AAgBA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MADL,CADJ,CADJ;AAOH;AACD,IAAMM,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { StyleSheet, View, Text } from 'react-native';\r\n\r\nexport default function Countdown({\r\n    until = 4\r\n}) {\r\n    const [number, setNumber] = useState(\r\n        Math.max(until, 0)\r\n    )\r\n    \r\n    let interval;\r\n\r\n    useEffect(() => {\r\n        const update = () => {\r\n            if (number === 1) {\r\n                clearInterval(interval)\r\n            }\r\n    \r\n            setNumber(number => --number)\r\n        }\r\n        \r\n        interval = setInterval(\r\n           update\r\n        , 1000)\r\n\r\n        return () => clearInterval(interval)\r\n    }, [])\r\n\r\n    return (\r\n        <View>\r\n            <Text>\r\n                {number}\r\n            </Text>\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({})"]},"metadata":{},"sourceType":"module"}